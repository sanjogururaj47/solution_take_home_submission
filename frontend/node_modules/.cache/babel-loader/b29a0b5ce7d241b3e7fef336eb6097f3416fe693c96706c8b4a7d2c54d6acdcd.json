{"ast":null,"code":"var _jsxFileName = \"/Users/sanjogururaj47/Documents/Employment/Applications/BrainBase/solution_take_home/frontend/src/components/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport ChatMessage from './ChatMessage';\nimport ChatInput from './ChatInput';\nimport websocketService from '../services/websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'system',\n    content: 'You are an AI travel agent for Brainbase Airlines.'\n  }]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const processedMessagesRef = useRef(new Set());\n  useEffect(() => {\n    const connectWebSocket = async () => {\n      try {\n        await websocketService.connect('ws://localhost:8000/ws/chat');\n        setIsConnected(true);\n      } catch (error) {\n        console.error('Failed to connect to WebSocket:', error);\n        setTimeout(connectWebSocket, 3000); // Try to reconnect after 3 seconds\n      }\n    };\n    connectWebSocket();\n    websocketService.onMessage(handleWebSocketMessage);\n    return () => {\n      websocketService.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleWebSocketMessage = data => {\n    if (data.type === 'chat_response' && data.role && data.message) {\n      const messageId = `${data.role}:${data.message}`;\n      if (!processedMessagesRef.current.has(messageId)) {\n        processedMessagesRef.current.add(messageId);\n        let messageContent = data.message;\n        try {\n          if (typeof messageContent === 'string') {\n            const parsed = JSON.parse(messageContent);\n            messageContent = parsed;\n          }\n        } catch (e) {\n          // If parsing fails, use the original message\n        }\n        setMessages(prev => [...prev, {\n          role: data.role,\n          content: messageContent\n        }]);\n      }\n      setIsLoading(false);\n    } else if (data.type === 'message_received') {\n      console.log('Server received message:', data.message);\n    }\n  };\n  const handleSendMessage = content => {\n    const userMessage = {\n      role: 'user',\n      content\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    websocketService.sendMessage([...messages, userMessage]);\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto p-4\",\n      children: [!isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-4 bg-yellow-100 text-yellow-800 rounded\",\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), messages.slice(1).map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 text-gray-800 p-4 rounded-lg rounded-bl-none\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"zNr3hBGjucpYJvcbdlS/LVtbTe0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ChatMessage","ChatInput","websocketService","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","role","content","isConnected","setIsConnected","isLoading","setIsLoading","messagesEndRef","processedMessagesRef","Set","connectWebSocket","connect","error","console","setTimeout","onMessage","handleWebSocketMessage","disconnect","scrollToBottom","data","type","message","messageId","current","has","add","messageContent","parsed","JSON","parse","e","prev","log","handleSendMessage","userMessage","sendMessage","_messagesEndRef$curre","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","index","ref","onSendMessage","_c","$RefreshReg$"],"sources":["/Users/sanjogururaj47/Documents/Employment/Applications/BrainBase/solution_take_home/frontend/src/components/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport ChatMessage from './ChatMessage';\nimport ChatInput from './ChatInput';\nimport { ChatMessage as ChatMessageType, WebSocketMessage } from '../types';\nimport websocketService from '../services/websocket';\n\nconst Chat: React.FC = () => {\n  const [messages, setMessages] = useState<ChatMessageType[]>([\n    {\n      role: 'system',\n      content: 'You are an AI travel agent for Brainbase Airlines.'\n    }\n  ]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const processedMessagesRef = useRef<Set<string>>(new Set());\n\n  useEffect(() => {\n    const connectWebSocket = async () => {\n      try {\n        await websocketService.connect('ws://localhost:8000/ws/chat');\n        setIsConnected(true);\n      } catch (error) {\n        console.error('Failed to connect to WebSocket:', error);\n        setTimeout(connectWebSocket, 3000); // Try to reconnect after 3 seconds\n      }\n    };\n\n    connectWebSocket();\n    websocketService.onMessage(handleWebSocketMessage);\n\n    return () => {\n      websocketService.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleWebSocketMessage = (data: WebSocketMessage) => {\n    if (data.type === 'chat_response' && data.role && data.message) {\n      const messageId = `${data.role}:${data.message}`;\n      \n      if (!processedMessagesRef.current.has(messageId)) {\n        processedMessagesRef.current.add(messageId);\n        \n        let messageContent = data.message;\n        try {\n          if (typeof messageContent === 'string') {\n            const parsed = JSON.parse(messageContent);\n            messageContent = parsed;\n          }\n        } catch (e) {\n          // If parsing fails, use the original message\n        }\n        \n        setMessages(prev => [\n          ...prev,\n          { role: data.role as 'assistant', content: messageContent }\n        ]);\n      }\n      \n      setIsLoading(false);\n    } else if (data.type === 'message_received') {\n      console.log('Server received message:', data.message);\n    }\n  };\n\n  const handleSendMessage = (content: string) => {\n    const userMessage: ChatMessageType = { role: 'user', content };\n    \n    setMessages(prev => [...prev, userMessage]);\n    \n    setIsLoading(true);\n    \n    websocketService.sendMessage([...messages, userMessage]);\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex-grow overflow-y-auto p-4\">\n        {!isConnected && (\n          <div className=\"text-center p-4 bg-yellow-100 text-yellow-800 rounded\">\n            Connecting to server...\n          </div>\n        )}\n        \n        {messages.slice(1).map((message, index) => (\n          <ChatMessage key={index} message={message} />\n        ))}\n        \n        {isLoading && (\n          <div className=\"flex justify-start mb-4\">\n            <div className=\"bg-gray-200 text-gray-800 p-4 rounded-lg rounded-bl-none\">\n              <p>Thinking...</p>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      <ChatInput onSendMessage={handleSendMessage} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}