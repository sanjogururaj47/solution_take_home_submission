{"ast":null,"code":"var _jsxFileName = \"/Users/sanjogururaj47/Documents/Employment/Applications/temp/solution_take_home_submission/frontend/src/components/ChatMessage.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatMessage = ({\n  message\n}) => {\n  const isUser = message.role === 'user';\n\n  // Function to format the content of the message\n  const formatContent = content => {\n    if (typeof content === 'string') {\n      return content;\n    }\n    return JSON.stringify(content, null, 2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex ${isUser ? 'justify-end' : 'justify-start'} mb-4`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `max-w-md p-4 rounded-lg ${isUser ? 'bg-blue-500 text-white rounded-br-none' : 'bg-gray-200 text-gray-800 rounded-bl-none'}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"whitespace-pre-wrap\",\n        children: formatContent(message.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = ChatMessage;\nexport default ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatMessage","message","isUser","role","formatContent","content","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sanjogururaj47/Documents/Employment/Applications/temp/solution_take_home_submission/frontend/src/components/ChatMessage.tsx"],"sourcesContent":["import React from 'react';\nimport { ChatMessage as ChatMessageType } from '../types';\n\ninterface ChatMessageProps {\n  message: ChatMessageType;\n}\n\nconst ChatMessage: React.FC<ChatMessageProps> = ({ message }) => {\n  const isUser = message.role === 'user';\n  \n  // Function to format the content of the message\n  const formatContent = (content: any) => {\n    if (typeof content === 'string') {\n      return content;\n    }\n    return JSON.stringify(content, null, 2);\n  };\n  \n  return (\n    <div className={`flex ${isUser ? 'justify-end' : 'justify-start'} mb-4`}>\n      <div \n        className={`max-w-md p-4 rounded-lg ${\n          isUser \n            ? 'bg-blue-500 text-white rounded-br-none' \n            : 'bg-gray-200 text-gray-800 rounded-bl-none'\n        }`}\n      >\n        <p className=\"whitespace-pre-wrap\">{formatContent(message.content)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC/D,MAAMC,MAAM,GAAGD,OAAO,CAACE,IAAI,KAAK,MAAM;;EAEtC;EACA,MAAMC,aAAa,GAAIC,OAAY,IAAK;IACtC,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC/B,OAAOA,OAAO;IAChB;IACA,OAAOC,IAAI,CAACC,SAAS,CAACF,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;EACzC,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAE,QAAQN,MAAM,GAAG,aAAa,GAAG,eAAe,OAAQ;IAAAO,QAAA,eACtEV,OAAA;MACES,SAAS,EAAE,2BACTN,MAAM,GACF,wCAAwC,GACxC,2CAA2C,EAC9C;MAAAO,QAAA,eAEHV,OAAA;QAAGS,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEL,aAAa,CAACH,OAAO,CAACI,OAAO;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAxBId,WAAuC;AA0B7C,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}